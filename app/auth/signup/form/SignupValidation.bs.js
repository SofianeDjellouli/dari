// Generated by ReScript, PLEASE EDIT WITH CARE
"use strict"

var Validations = require("../../../core/validations/Validations.bs.js")
var Belt_MapString = require("rescript/lib/js/belt_MapString.js")

var tooShortPassword = "Password must be at least 8 characters"

var tooLongPassword = "Password must be less than 32 characters"

var invalidEmail = "Please enter a valid email address"

function validate(state) {
  return Belt_MapString.toArray(state).reduce(function (acc, curr) {
    var value = curr[1].value
    var key = curr[0]
    var length = value.length
    if (length === 0) {
      return acc.concat([
        {
          name: key,
          error: "This field is required",
        },
      ])
    } else if (key === "password") {
      if (length < 8) {
        return acc.concat([
          {
            name: key,
            error: tooShortPassword,
          },
        ])
      } else if (length > 32) {
        return acc.concat([
          {
            name: key,
            error: tooLongPassword,
          },
        ])
      } else {
        return acc
      }
    } else if (key === "email" && !Validations.testEmail(value)) {
      return acc.concat([
        {
          name: key,
          error: invalidEmail,
        },
      ])
    } else {
      return acc
    }
  }, [])
}

exports.tooShortPassword = tooShortPassword
exports.tooLongPassword = tooLongPassword
exports.invalidEmail = invalidEmail
exports.validate = validate
/* Validations Not a pure module */
