// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js"
import * as Ionic from "../../../../core/rescript/Ionic.bs.js"
import * as React from "react"
import * as ReForm from "@rescriptbr/reform/src/ReForm.bs.js"
import * as Spread from "../../../../core/components/spread/Spread.bs.js"
import * as TextField from "../../../../core/components/textfield/TextField.bs.js"
import * as Belt_Array from "rescript/lib/es6/belt_Array.js"
import * as React$1 from "@ionic/react"

function get(values, field) {
  if (field) {
    return values.email
  } else {
    return values.password
  }
}

function set(values, field, value) {
  if (field) {
    return {
      password: values.password,
      email: value,
    }
  } else {
    return {
      password: value,
      email: values.email,
    }
  }
}

var Fields = {
  get: get,
  set: set,
}

var FormApi = ReForm.Make({
  set: set,
  get: get,
})

function SignupForm(Props) {
  var password = Curry._3(
    FormApi.ReSchema.Validation.nonEmpty,
    undefined,
    undefined,
    /* Password */ 0
  )
  var email = Curry._3(FormApi.ReSchema.Validation.email, undefined, undefined, /* Email */ 1)
  var form = Curry._7(
    FormApi.use,
    {
      password: "",
      email: "",
    },
    /* Schema */ {
      _0: Belt_Array.concat(email, password),
    },
    function (data) {
      console.log(data)
    },
    undefined,
    undefined,
    /* OnChange */ 0,
    undefined
  )
  var handleSubmit = function ($$event) {
    $$event.preventDefault()
    return Curry._1(form.submit, undefined)
  }
  var handleField = function (field, e) {
    var value = e.target.value
    return Curry._2(form.handleChange, field, value)
  }
  console.log(form.state)
  return React.createElement(
    Ionic.Form.make,
    {
      onSubmit: handleSubmit,
      children: null,
    },
    React.createElement(TextField.make, {
      name: "Email",
      label: "Email",
      error: Curry._1(
        form.getFieldError,
        /* Field */ {
          _0: /* Email */ 1,
        }
      ),
      value: form.values.email,
      onChange: function (param) {
        return handleField(/* Email */ 1, param)
      },
      type_: "email",
      autofocus: true,
    }),
    React.createElement(TextField.make, {
      name: "password",
      label: "Password",
      error: Curry._1(
        form.getFieldError,
        /* Field */ {
          _0: /* Password */ 0,
        }
      ),
      value: form.values.password,
      onChange: function (param) {
        return handleField(/* Password */ 0, param)
      },
      type_: "password",
    }),
    React.createElement(React$1.IonRow, {
      children: React.createElement(React$1.IonCol, {
        children: React.createElement(Spread.make, {
          props: {
            type: "submit",
          },
          children: React.createElement(React$1.IonButton, {
            children: "Submit",
            color: "danger",
            expand: "block",
          }),
        }),
      }),
    })
  )
}

var make = SignupForm

export { Fields, FormApi, make }
/* FormApi Not a pure module */
