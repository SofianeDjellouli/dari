// Generated by ReScript, PLEASE EDIT WITH CARE
"use strict"

var Curry = require("rescript/lib/js/curry.js")
var React = require("react")
var Toggle = require("../../../core/hooks/toggle/Toggle.bs.js")
var Belt_Array = require("rescript/lib/js/belt_Array.js")
var React$1 = require("@ionic/react")
var Icons = require("ionicons/icons")

function ErrandsItem(Props) {
  var name = Props.name
  var errands = Props.errands
  var defaultToggled = Props.defaultToggled
  var match = Toggle.useToggle(defaultToggled)
  var toggle = match[1]
  var toggled = match[0]
  var handleToggle = function (param) {
    return Curry._1(toggle, undefined)
  }
  return React.createElement(React$1.IonList, {
    children: React.createElement(
      React.Fragment,
      undefined,
      React.createElement(
        React$1.IonListHeader,
        {
          children: null,
          onClick: handleToggle,
        },
        React.createElement(React$1.IonLabel, {
          children: name,
        }),
        React.createElement(React$1.IonButton, {
          children: React.createElement(React$1.IonIcon, {
            icon: toggled ? Icons.chevronDownOutline : Icons.chevronForwardOutline,
          }),
          shape: "round",
        })
      ),
      toggled
        ? Belt_Array.map(errands, function (errand) {
            var match = errand.level
            var props =
              match === "Missing"
                ? {
                    color: "danger",
                    firstAction: Icons.heart,
                    secondAction: Icons.heartHalf,
                  }
                : match === "Present"
                ? {
                    color: "success",
                    firstAction: Icons.heartDislikeOutline,
                    secondAction: Icons.heartHalf,
                  }
                : {
                    color: "warning",
                    firstAction: Icons.heart,
                    secondAction: Icons.heartDislikeOutline,
                  }
            var color = props.color
            return React.createElement(
              React$1.IonItemSliding,
              {
                children: null,
                key: String(errand.id),
              },
              React.createElement(React$1.IonItemOptions, {
                children: React.createElement(React$1.IonItemOption, {
                  children: React.createElement(React$1.IonIcon, {
                    icon: Icons.trashBin,
                  }),
                  color: color,
                }),
                side: "start",
              }),
              React.createElement(React$1.IonItem, {
                children: React.createElement(React$1.IonLabel, {
                  children: errand.name,
                }),
                color: color,
              }),
              React.createElement(
                React$1.IonItemOptions,
                {
                  children: null,
                  side: "end",
                },
                React.createElement(React$1.IonItemOption, {
                  children: React.createElement(React$1.IonIcon, {
                    icon: props.firstAction,
                  }),
                  color: color,
                }),
                React.createElement(React$1.IonItemOption, {
                  children: React.createElement(React$1.IonIcon, {
                    icon: props.secondAction,
                  }),
                  color: color,
                })
              )
            )
          })
        : null
    ),
  })
}

var make = ErrandsItem

exports.make = make
/* react Not a pure module */
