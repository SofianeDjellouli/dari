// Generated by ReScript, PLEASE EDIT WITH CARE
"use strict"

var Curry = require("rescript/lib/js/curry.js")
var React = require("react")
var Spread = require("../../../../core/components/spread/Spread.bs.js")
var Belt_Array = require("rescript/lib/js/belt_Array.js")
var React$1 = require("@ionic/react")
var Icons = require("ionicons/icons")

var presentProps = {
  icon: Icons.heart,
  name: "Present",
}

var lackingProps = {
  icon: Icons.heartHalf,
  name: "Lacking",
}

var missingProps = {
  icon: Icons.heartDislikeOutline,
  name: "Missing",
}

var levels = [presentProps, lackingProps, missingProps]

function CreateErrandItem(Props) {
  var dispatch = Props.dispatch
  var state = Props.state
  var handleNameChange = function (e) {
    return Curry._1(dispatch, {
      TAG: /* ChangeName */ 0,
      _0: e.target.value,
    })
  }
  var handleLevelChange = function (e) {
    return Curry._1(dispatch, {
      TAG: /* ChangeLevel */ 1,
      _0: e.target.dataset.name,
    })
  }
  return React.createElement(
    React$1.IonItem,
    {
      children: null,
    },
    React.createElement(React$1.IonInput, {
      value: state.name,
      autofocus: true,
      onIonChange: handleNameChange,
    }),
    Belt_Array.map(levels, function (level) {
      return React.createElement(Spread.make, {
        props: {
          "data-name": level.name,
        },
        children: React.createElement(React$1.IonIcon, {
          slot: "end",
          icon: level.icon,
          onClick: handleLevelChange,
          color: state.level === level.name ? "success" : "medium",
        }),
        key: level.name,
      })
    })
  )
}

var make = CreateErrandItem

exports.presentProps = presentProps
exports.lackingProps = lackingProps
exports.missingProps = missingProps
exports.levels = levels
exports.make = make
/* presentProps Not a pure module */
