// Generated by ReScript, PLEASE EDIT WITH CARE
"use strict"

var Curry = require("rescript/lib/js/curry.js")
var React = require("react")
var Toggle = require("../../../core/hooks/toggle/Toggle.bs.js")
var Belt_Array = require("rescript/lib/js/belt_Array.js")
var React$1 = require("@ionic/react")
var ErrandsLevelItem = require("../level-item/ErrandsLevelItem.bs.js")
var DataClient = require("next/data-client")
var ErrandsLevels = require("../queries/errands-levels").default

var errandsQuery = ErrandsLevels

function ErrandsLevelsList(Props) {
  var match = Toggle.useToggle(false)
  var toggle = match[1]
  var match$1 = DataClient.usePaginatedQuery(errandsQuery, undefined)
  var errandsLevels = match$1[0]
  var refetch = match$1[1].refetch
  return React.createElement(
    React$1.IonContent,
    {
      children: null,
    },
    React.createElement(React$1.IonButton, {
      children: "Open",
      onClick: function (param) {
        return Curry._1(toggle, undefined)
      },
    }),
    React.createElement(React$1.IonPopover, {
      children: React.createElement("p", undefined, "This is popover content"),
      isOpen: match[0],
      onDidDismiss: function (param) {
        return Curry._1(toggle, undefined)
      },
    }),
    errandsLevels !== undefined
      ? React.createElement(
          React.Fragment,
          undefined,
          Belt_Array.map(errandsLevels, function (errandLevel) {
            return React.createElement(ErrandsLevelItem.make, {
              name: errandLevel.name,
              errands: errandLevel.errands,
              defaultToggled: errandLevel.name === "Missing",
              refetch: refetch,
              key: String(errandLevel.id),
            })
          })
        )
      : null
  )
}

var make = ErrandsLevelsList

exports.errandsQuery = errandsQuery
exports.make = make
/* errandsQuery Not a pure module */
