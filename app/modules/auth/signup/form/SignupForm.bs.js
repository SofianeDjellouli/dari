// Generated by ReScript, PLEASE EDIT WITH CARE
"use strict"

var Blitz = require("../../../../core/rescript/blitz/Blitz.bs.js")
var Curry = require("rescript/lib/js/curry.js")
var Ionic = require("../../../../core/rescript/ionic/Ionic.bs.js")
var React = require("react")
var FormState = require("../../../../core/rescript/form/state/FormState.bs.js")
var TextField = require("../../../../core/components/textfield/TextField.bs.js")
var SignupReducer = require("../reducer/SignupReducer.bs.js")
var Belt_MapString = require("rescript/lib/js/belt_MapString.js")
var SignupValidation = require("../validation/SignupValidation.bs.js")
var Signup = require("../mutations/signup").default

var signup = Signup

function SignupForm(Props) {
  var match = Blitz.ReactQuery.useMutation(signup, undefined, undefined, undefined)
  var signupMutation = match[0]
  var match$1 = React.useReducer(SignupReducer.reducer, SignupReducer.initialState)
  var dispatch = match$1[1]
  var state = match$1[0]
  var handleSubmit = function ($$event) {
    $$event.preventDefault()
    var validatedState = SignupValidation.validate(state)
    if (FormState.isValidForm(validatedState)) {
      return FormState.mapFieldsToMutation(state, signupMutation)
    } else {
      return Curry._1(dispatch, {
        TAG: /* SetState */ 1,
        _0: validatedState,
      })
    }
  }
  var handleChange = function (e) {
    var $$event = e.target
    var value = $$event.value
    var name = $$event.name
    return Curry._1(dispatch, {
      TAG: /* Change */ 0,
      name: name,
      value: value,
    })
  }
  return React.createElement(
    Ionic.Form.make,
    {
      onSubmit: handleSubmit,
      children: null,
    },
    React.createElement(TextField.make, {
      name: "email",
      label: "Email",
      error: Belt_MapString.getWithDefault(state, "email", FormState.field).error,
      value: Belt_MapString.getWithDefault(state, "email", FormState.field).value,
      onChange: handleChange,
      type_: "email",
      autofocus: true,
    }),
    React.createElement(TextField.make, {
      name: "password",
      label: "Password",
      error: Belt_MapString.getWithDefault(state, "password", FormState.field).error,
      value: Belt_MapString.getWithDefault(state, "password", FormState.field).value,
      onChange: handleChange,
      type_: "password",
    }),
    React.createElement(Ionic.Button.AsyncButton.make, {
      color: "danger",
      expand: "block",
      label: "Submit",
      isLoading: match[1].isLoading,
    })
  )
}

var make = SignupForm

exports.signup = signup
exports.make = make
/* signup Not a pure module */
