// Generated by ReScript, PLEASE EDIT WITH CARE
"use strict"

var Test = require("rescript-test/src/Test.bs.js")
var Assert = require("./Assert.bs.js")
var Belt_MapString = require("rescript/lib/js/belt_MapString.js")
var SignupValidation = require("../app/modules/auth/signup/validation/SignupValidation.bs.js")

Test.test("Validates valid state", function (param) {
  var stateArray = [
    [
      "email",
      {
        value: "myemail@gmail.com",
        error: "",
      },
    ],
    [
      "password",
      {
        value: "12345678",
        error: "",
      },
    ],
  ]
  var state = Belt_MapString.fromArray(stateArray)
  var result = SignupValidation.validate(state)
  var expected = []
  return Assert.assertArrayEqual(result, expected)
})

Test.test("Invalidates empty required fields", function (param) {
  var stateArray = [
    [
      "email",
      {
        value: "myemail@gmail.com",
        error: "",
      },
    ],
    [
      "password",
      {
        value: "",
        error: "",
      },
    ],
  ]
  var state = Belt_MapString.fromArray(stateArray)
  var result = SignupValidation.validate(state)
  var expected = [
    {
      name: "password",
      error: "This field is required",
    },
  ]
  return Assert.assertArrayEqual(result, expected)
})

Test.test("Invalidates too short password", function (param) {
  var stateArray = [
    [
      "email",
      {
        value: "myemail@gmail.com",
        error: "",
      },
    ],
    [
      "password",
      {
        value: "1",
        error: "",
      },
    ],
  ]
  var state = Belt_MapString.fromArray(stateArray)
  var result = SignupValidation.validate(state)
  var expected = [
    {
      name: "password",
      error: SignupValidation.tooShortPassword,
    },
  ]
  return Assert.assertArrayEqual(result, expected)
})

Test.test("Invalidates too long password", function (param) {
  var stateArray = [
    [
      "email",
      {
        value: "myemail@gmail.com",
        error: "",
      },
    ],
    [
      "password",
      {
        value: "1234567890123456789012345678901234567890",
        error: "",
      },
    ],
  ]
  var state = Belt_MapString.fromArray(stateArray)
  var result = SignupValidation.validate(state)
  var expected = [
    {
      name: "password",
      error: SignupValidation.tooLongPassword,
    },
  ]
  return Assert.assertArrayEqual(result, expected)
})

Test.test("Invalidates invalid email", function (param) {
  var stateArray = [
    [
      "email",
      {
        value: "myemail@gmail",
        error: "",
      },
    ],
    [
      "password",
      {
        value: "123456789",
        error: "",
      },
    ],
  ]
  var state = Belt_MapString.fromArray(stateArray)
  var result = SignupValidation.validate(state)
  var expected = [
    {
      name: "email",
      error: SignupValidation.invalidEmail,
    },
  ]
  return Assert.assertArrayEqual(result, expected)
})

/*  Not a pure module */
